{"version":3,"file":"static/js/812.7feae290.chunk.js","mappings":"6MAEaA,EAAOC,EAAAA,EAAAA,GAAH,sG,SCAJC,EAAOD,EAAAA,EAAAA,GAAH,iaAiBJE,EAAYF,EAAAA,EAAAA,IAAH,+DAKTG,EAAQH,EAAAA,EAAAA,GAAH,mHAQLI,EAAYJ,EAAAA,EAAAA,IAAH,sB,SCItB,MA9BA,YAAmC,IAAVK,EAAS,EAATA,MACvB,OACE,SAACJ,EAAD,WACE,UAAC,KAAD,CAAMK,GAAE,kBAAaD,EAAME,IAA3B,WACE,UAACH,EAAD,YACIC,EAAMG,cACN,gBACEC,IAAG,sDACHC,IAAKL,EAAMM,OAASN,EAAMO,KAC1BC,MAAM,MACNC,OAAO,QAGVT,EAAMG,cACL,gBACEC,IAAG,yCAAoCJ,EAAMG,aAC7CE,IAAKL,EAAMM,OAASN,EAAMO,KAC1BC,MAAM,MACNC,OAAO,YAIb,SAACZ,EAAD,WACE,SAACC,EAAD,UAAQE,EAAMM,OAASN,EAAMO,aArBxBP,EAAME,GA0BpB,ECjBD,MAXA,YAAgC,IAAXQ,EAAU,EAAVA,OACnB,OACE,SAAChB,EAAD,UACGgB,GACCA,EAAOC,KAAI,SAAAX,GACT,OAAO,SAAC,EAAD,CAA8BA,MAAOA,GAAjBA,EAAME,GAClC,KAGR,C,4JCbYJ,EAAQH,EAAAA,EAAAA,GAAH,+JASLiB,EAAUjB,EAAAA,EAAAA,IAAH,wG,SCcpB,MAnBA,WACE,OAA4CkB,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,uGACEC,EAAAA,EAAAA,MADF,gBAChBC,EADgB,EAChBA,QACRJ,EAAkBI,GAFM,2CAAH,qDAIvBF,GACD,GAAE,KAGD,UAACL,EAAD,YACE,SAACd,EAAD,8BACA,SAACsB,EAAA,EAAD,CAAWV,OAAQI,MAGxB,C,+LCrBKO,EAAMC,mCAECJ,EAAW,mCAAG,sGACFK,EAAAA,EAAAA,IAAA,gEACoCF,IAFlC,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXC,EAAiB,mCAAG,WAAMC,GAAN,yFAEvBH,EAAAA,EAAAA,IAAA,0DAA6DG,EAA7D,oBAAoFL,EAApF,iDAFuB,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAOjBG,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,oBACoCP,EADpC,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfK,EAAe,mCAAG,WAAMD,GAAN,yFACNL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BAC4CP,EAD5C,oBADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfM,EAAe,mCAAG,WAAMF,GAAN,yFACNL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BAC4CP,EAD5C,2BADM,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style-type: none;\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  height: 550px;\n  flex-direction: column;\n  border: 2px solid #483d8b;\n  border-radius: 8px;\n  box-shadow: inset rgba(72, 61, 139, 0.6) 0 -3px 8px,\n    inset rgba(72, 61, 139, 0.7) 0 3px 8px,\n    rgba(72, 61, 139, 0.8) 0 3px 8px -3px;\n\n  &:hover,\n  &:focus {\n    box-shadow: inset 2px 2px 5px rgba(72, 61, 139, 0.5),\n      1px 1px 5px rgba(72, 61, 139, 1);\n  }\n`;\n\nexport const TitleWrap = styled.div`\n  margin-top: 15px;\n  padding: 10px;\n`;\n\nexport const Title = styled.h4`\n  color: black;\n  font-size: 24px;\n  margin: 0;\n  width: 230px;\n  text-align: center;\n`;\n\nexport const ImageWrap = styled.div``;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Item, Title, TitleWrap, ImageWrap } from './MovieListItem.styled';\n\nfunction MovieListItem({ movie }) {\n  return (\n    <Item key={movie.id}>\n      <Link to={`/movies/${movie.id}`}>\n        <ImageWrap>\n          {!movie.poster_path && (\n            <img\n              src={`https://static.thenounproject.com/png/70760-200.png`}\n              alt={movie.title || movie.name}\n              width=\"250\"\n              height=\"375\"\n            />\n          )}\n          {movie.poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title || movie.name}\n              width=\"250\"\n              height=\"375\"\n            />\n          )}\n        </ImageWrap>\n        <TitleWrap>\n          <Title>{movie.title || movie.name}</Title>\n        </TitleWrap>\n      </Link>\n    </Item>\n  );\n}\n\nexport default MovieListItem;\n\nMovieListItem.propTypes = {\n  movies: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List } from './MovieList.styled';\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\n\nfunction MovieList({ movies }) {\n  return (\n    <List>\n      {movies &&\n        movies.map(movie => {\n          return <MovieListItem key={movie.id} movie={movie} />;\n        })}\n    </List>\n  );\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #483d8b;\n  text-align: center;\n  text-decoration: underline dotted;\n  margin: 0;\n  margin-top: 35px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 15px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { getTrending } from '../../services/api';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport { Title, Wrapper } from './HomePage.styled';\n\nfunction HomePage() {\n  const [selectedMovies, setSelectedMovies] = useState([]);\n\n  useEffect(() => {\n    const getTrendingMovies = async () => {\n      const { results } = await getTrending();\n      setSelectedMovies(results);\n    };\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <Wrapper>\n      <Title>Tranding today</Title>\n      <MovieList movies={selectedMovies} />\n    </Wrapper>\n  );\n}\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst KEY = process.env.REACT_APP_KEY;\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport const getSearchedMovies = async searchQuery => {\n  const { data } =\n    await axios.get(`https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=${KEY}&language=en-US&page=1&include_adult=false\n`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["List","styled","Item","TitleWrap","Title","ImageWrap","movie","to","id","poster_path","src","alt","title","name","width","height","movies","map","Wrapper","useState","selectedMovies","setSelectedMovies","useEffect","getTrendingMovies","getTrending","results","MovieList","KEY","process","axios","data","getSearchedMovies","searchQuery","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}