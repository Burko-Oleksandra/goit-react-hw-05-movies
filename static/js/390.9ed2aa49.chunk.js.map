{"version":3,"file":"static/js/390.9ed2aa49.chunk.js","mappings":"iRAEaA,EAAOC,EAAAA,EAAAA,GAAH,2dAoBJC,EAAYD,EAAAA,EAAAA,IAAH,4HAQTE,EAAQF,EAAAA,EAAAA,GAAH,wIASLG,EAAYH,EAAAA,EAAAA,GAAH,uEAKTI,EAAgBJ,EAAAA,EAAAA,KAAH,4E,SCN1B,I,EAAA,EA5BA,YAAyD,IAArCK,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,WACxC,OACE,UAACR,EAAD,YACIQ,IACA,gBACEC,IAAG,sEACHC,IAAKJ,EACLK,MAAM,MACNC,OAAO,QAGVJ,IACC,gBACEC,IAAG,6CAAwCD,GAC3CE,IAAKJ,EACLK,MAAM,SAGV,UAACT,EAAD,YACE,SAACC,EAAD,UAAQG,KACR,UAACF,EAAD,YACE,SAACC,EAAD,yBADF,IAC6CE,UAKpD,EClCYM,EAAOZ,EAAAA,EAAAA,GAAH,sGCwCjB,MAnCA,WACE,OAAsCa,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,eAASG,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,GAAgB,OAAZF,EAAJ,CACA,IAAMG,EAAU,mCAAG,qGACKC,EAAAA,EAAAA,IAAgBJ,GADrB,OACXK,EADW,OAEjBN,EAAaM,EAAQC,IACrBV,EAAeS,EAAQE,MAHN,2CAAH,qDAKhBJ,GAN4B,CAO7B,GAAE,CAACH,KAGF,mCACiBH,IAAdC,IACC,SAACL,EAAD,UACGE,EAAYa,KAAI,YAA4C,IAAzCF,EAAwC,EAAxCA,GAAIG,EAAoC,EAApCA,KAAMtB,EAA8B,EAA9BA,UAAWuB,EAAmB,EAAnBA,aACvC,OACE,SAAC,EAAD,CAEExB,UAAWuB,EACXtB,UAAWA,EACXC,WAAYsB,GAHPJ,EAMV,OAKV,C,+LCtCKK,EAAMC,mCAECC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,gEACoCH,IAFlC,uBACjBI,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXC,EAAiB,mCAAG,WAAMC,GAAN,yFAEvBH,EAAAA,EAAAA,IAAA,0DAA6DG,EAA7D,oBAAoFN,EAApF,iDAFuB,uBACvBI,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAOjBG,EAAe,mCAAG,WAAMlB,GAAN,yFACNc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,oBACoCW,EADpC,oBADM,uBACrBI,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfX,EAAe,mCAAG,WAAMJ,GAAN,yFACNc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,4BAC4CW,EAD5C,oBADM,uBACrBI,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfI,EAAe,mCAAG,WAAMnB,GAAN,yFACNc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,4BAC4CW,EAD5C,2BADM,uBACrBI,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/CastPage/CastItem.styled.jsx","components/CastPage/CastItem.jsx","components/CastPage/CastPage.styled.jsx","components/CastPage/CastPage.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n  width: 200px;\n  border: 2px solid #483d8b;\n  border-radius: 8px;\n  box-shadow: inset rgba(72, 61, 139, 0.6) 0 -3px 8px,\n    inset rgba(72, 61, 139, 0.7) 0 3px 8px,\n    rgba(72, 61, 139, 0.8) 0 3px 8px -3px;\n\n  &:hover,\n  &:focus {\n    box-shadow: inset 2px 2px 5px rgba(72, 61, 139, 0.5),\n      1px 1px 5px rgba(72, 61, 139, 1);\n  }\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n`;\n\nexport const Title = styled.h3`\n  color: black;\n  font-size: 18px;\n  margin: 0;\n  width: 180px;\n  text-align: center;\n  font-weight: 600;\n`;\n\nexport const Character = styled.h3`\n  text-decoration: none;\n  font-weight: 600;\n`;\n\nexport const CharacterWrap = styled.span`\n  text-decoration: underline;\n  font-weight: 800;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Item,\n  Title,\n  TitleWrap,\n  CharacterWrap,\n  Character,\n} from './CastItem.styled';\n\nfunction CastItem({ actorName, character, actorPhoto }) {\n  return (\n    <Item>\n      {!actorPhoto && (\n        <img\n          src={`https://www.freeiconspng.com/thumbs/account-icon/account-icon-8.png`}\n          alt={actorName}\n          width=\"200\"\n          height=\"300\"\n        />\n      )}\n      {actorPhoto && (\n        <img\n          src={`https://image.tmdb.org/t/p/original${actorPhoto}`}\n          alt={actorName}\n          width=\"200\"\n        />\n      )}\n      <TitleWrap>\n        <Title>{actorName}</Title>\n        <Character>\n          <CharacterWrap>Character:</CharacterWrap> {character}\n        </Character>\n      </TitleWrap>\n    </Item>\n  );\n}\n\nexport default CastItem;\n\nCastItem.propTypes = {\n  actorName: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  actorPhoto: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style-type: none;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../services/api';\n\nimport CastItem from './CastItem';\nimport { List } from './CastPage.styled';\n\nfunction CastPage() {\n  const [castResults, setCastResults] = useState([]);\n  const [resultsId, setResultsId] = useState(undefined);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId === null) return;\n    const getCredits = async () => {\n      const results = await getMovieCredits(movieId);\n      setResultsId(results.id);\n      setCastResults(results.cast);\n    };\n    getCredits();\n  }, [movieId]);\n\n  return (\n    <>\n      {resultsId !== undefined && (\n        <List>\n          {castResults.map(({ id, name, character, profile_path }) => {\n            return (\n              <CastItem\n                key={id}\n                actorName={name}\n                character={character}\n                actorPhoto={profile_path}\n              />\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n}\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst KEY = process.env.REACT_APP_KEY;\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport const getSearchedMovies = async searchQuery => {\n  const { data } =\n    await axios.get(`https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=${KEY}&language=en-US&page=1&include_adult=false\n`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["Item","styled","TitleWrap","Title","Character","CharacterWrap","actorName","character","actorPhoto","src","alt","width","height","List","useState","castResults","setCastResults","undefined","resultsId","setResultsId","movieId","useParams","useEffect","getCredits","getMovieCredits","results","id","cast","map","name","profile_path","KEY","process","getTrending","axios","data","getSearchedMovies","searchQuery","getMovieDetails","getMovieReviews"],"sourceRoot":""}